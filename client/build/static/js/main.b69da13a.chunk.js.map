{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","utils/format.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","className","state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","getTransactions","a","axios","get","res","data","response","deleteTransaction","id","delete","addTransaction","config","headers","post","Provider","value","numberWithCommas","x","toString","replace","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","Transaction","sign","text","Math","abs","onClick","TransactionList","useEffect","key","AddTransaction","useState","setText","setAmount","isExpense","setIsExpense","isIncome","setIsIncome","onSubmit","e","preventDefault","transactionAmount","console","log","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b69da13a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './header.css'\r\nexport const Header = () => {\r\n  return <h2 className=\"header\">Expense Tracker</h2>;\r\n};\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"GET_TRANSACTIONS\":\r\n      return {\r\n        ...state,\r\n        loading: false, //this means that the transactions were fetched..\r\n        transactions: action.payload,\r\n      };\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction) => transaction._id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: [...state.transactions, action.payload],\r\n        //coz when we'll fetch the transaction to add ..the latest one will be the last\r\n      };\r\n    case \"TRANSACTION_ERROR\":\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\nimport axios from \"axios\";\r\n\r\n// Initial state\r\nconst initialState = {\r\n  transactions: [],\r\n  error: null,\r\n  // if we get any errors in async calls, we will put them into the state in case we need this info for furture\r\n  loading: true,\r\n  //here it will act as a spinner..i.e if it still loading or not..it will be set to true first..but once we make our request we will set it to false in the reducer\r\n};\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Provider Component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  //Actions\r\n  const getTransactions = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/v1/transactions\");\r\n      // we do need to include the --prefix  i.e http://localhost:5000\r\n      //coz we added it in the proxy in package.json file\r\n      dispatch({\r\n        type: \"GET_TRANSACTIONS\",\r\n        payload: res.data.data,\r\n      });\r\n      //we'll dispacth our JSON response i.e res.data.data to our state\r\n    } catch (error) {\r\n      dispatch({\r\n        type: \"TRANSACTION_ERROR\",\r\n        payload: error.response.data.error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteTransaction = async (id) => {\r\n    try {\r\n      await axios.delete(`/api/v1/transactions/${id}`);\r\n      // here axios will send the req to delete the transaction of particular id\r\n      //to mongoDB through backend so that it'll get remove from database as well\r\n      dispatch({\r\n        type: \"DELETE_TRANSACTION\",\r\n        payload: id,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: \"TRANSACTION_ERROR\",\r\n        payload: error.response.data.error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const addTransaction = async (transaction) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/transactions/\",\r\n        transaction,\r\n        config\r\n      );\r\n      //it will add the transaction through POST req by taking transaction\r\n      //along as a 2nd parameter and config as 3rd which would conatain\r\n      //the meta data that would specify what kind of data we are sending to database\r\n      dispatch({\r\n        type: \"ADD_TRANSACTION\",\r\n        payload: res.data.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: \"TRANSACTION_ERROR\",\r\n        payload: error.response.data.error,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        error: state.error,\r\n        loading: state.loading,\r\n        getTransactions,\r\n        deleteTransaction,\r\n        addTransaction,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","export function numberWithCommas(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { numberWithCommas } from \"../utils/format\";\r\n\r\nexport const Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n  return (\r\n    <div>\r\n      <h4>Your Balance</h4>\r\n      <h1>â‚¹{numberWithCommas(total)}</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { numberWithCommas } from \"../utils/format\";\r\n//{income}\r\n//{expense}\r\nexport const IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter((item) => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  ).toFixed(2);\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className=\"money plus\">â‚¹{numberWithCommas(income)}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className=\"money minus\">â‚¹{numberWithCommas(expense)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { numberWithCommas } from \"../utils/format\";\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\r\n  return (\r\n    <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\r\n      {transaction.text}{\" \"}\r\n      <span>\r\n        {sign}Rs.{numberWithCommas(Math.abs(transaction.amount))}\r\n      </span>\r\n      <button\r\n        onClick={() => deleteTransaction(transaction._id)}\r\n        className=\"delete-btn\"\r\n      >\r\n        x\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { Transaction } from \"./Transaction\";\r\n\r\nexport const TransactionList = () => {\r\n  const { transactions, getTransactions } = useContext(GlobalContext);\r\n\r\n  //we use useEffect when we make http request from a component\r\n  useEffect(() => {\r\n    getTransactions();\r\n  },[]); //it will run only once\r\n  return (\r\n    <div>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n        {transactions.map((transaction) => (\r\n          <Transaction key={transaction.id} transaction={transaction} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport const AddTransaction = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n  const [isExpense, setIsExpense] = useState(false); // Initially set as an expense\r\n  const [isIncome, setIsIncome] = useState(false); // Initially set as an expense\r\n\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Determine the sign of the amount based on isExpense\r\n    const transactionAmount = isExpense ? -Math.abs(amount) : Math.abs(amount);\r\n    console.log('transaction amount->',transactionAmount);\r\n\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 100000000),\r\n      text,\r\n      amount: transactionAmount,\r\n    };\r\n\r\n    addTransaction(newTransaction);\r\n\r\n    // Reset the form fields\r\n    setText(\"\");\r\n    setAmount(0);\r\n     // Set isExpense to false after adding the transaction\r\n     setIsExpense(false);\r\n     setIsIncome(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Description</label>\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            placeholder=\"Enter text...\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">\r\n            Amount <br />\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={Math.abs(amount)} // Display the absolute value\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            placeholder=\"Enter amount...\"\r\n          />\r\n          <button\r\n            type=\"button\" // Add this line\r\n            className={`expense-button ${isExpense ? \"active\" : \"\"}`}\r\n            onClick={() => setIsExpense(true)}\r\n          >\r\n            Expense\r\n          </button>\r\n          <button\r\n            type=\"button\" // Add this line\r\n            className={`income-button ${isIncome ? \"active\" : \"\"}`}\r\n            onClick={() => setIsIncome(true)}\r\n          >\r\n            Income\r\n          </button>\r\n        </div>\r\n\r\n        <button className=\"btn\" type=\"submit\">\r\n          Add transaction\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Header } from \"./components/Header\";\r\nimport { Balance } from \"./components/Balance\";\r\nimport { IncomeExpenses } from \"./components/IncomeExpenses\";\r\nimport { TransactionList } from \"./components/TransactionList\";\r\nimport { AddTransaction } from \"./components/AddTransaction\";\r\n\r\nimport { GlobalProvider } from \"./context/GlobalState\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalProvider>\r\n      <Header />\r\n      <div className=\"container\">\r\n        <div className=\"first-row\">\r\n          <Balance />\r\n          <IncomeExpenses />\r\n        </div>\r\n        <div className=\"second-row\">\r\n          <TransactionList />\r\n        </div>\r\n        <div className=\"second-column\">\r\n          <AddTransaction />\r\n        </div>\r\n      </div>\r\n    </GlobalProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}